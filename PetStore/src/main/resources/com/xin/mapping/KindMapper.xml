<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xin.dao.KindMapper" >
  <resultMap id="BaseResultMap" type="com.xin.model.Kind" >
    <id column="kindid" property="kindid" jdbcType="VARCHAR" />
    <result column="kindname" property="kindname" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />

    <!--<association property="hobby" column="kindid" select="queryHobby"></association>-->
    <collection property="products" javaType="ArrayList"
                ofType="com.xin.model.Product"
                column="kindid" select="queryProduct" >
    </collection>

  </resultMap>

  <!--<select id="queryHobby" resultMap="com.xin.dao.HobbyMapper.BaseResultMap">-->
    <!--select *-->
    <!--from hobby-->
    <!--where kindid=#{kindid,jdbcType=VARCHAR}-->
  <!--</select>-->
  <select id="queryProduct" resultMap="com.xin.dao.ProductMapper.BaseResultMap" >
      select *
      from product
      where kindid=#{kindid,jdbcType=VARCHAR}
  </select>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    kindid, kindname, description
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xin.model.KindExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from kind
    where kindid = #{kindid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from kind
    where kindid = #{kindid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xin.model.KindExample" >
    delete from kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xin.model.Kind" >
    insert into kind (kindid, kindname, description
      )
    values (#{kindid,jdbcType=VARCHAR}, #{kindname,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xin.model.Kind" >
    insert into kind
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="kindid != null" >
        kindid,
      </if>
      <if test="kindname != null" >
        kindname,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="kindid != null" >
        #{kindid,jdbcType=VARCHAR},
      </if>
      <if test="kindname != null" >
        #{kindname,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xin.model.KindExample" resultType="java.lang.Integer" >
    select count(*) from kind
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update kind
    <set >
      <if test="record.kindid != null" >
        kindid = #{record.kindid,jdbcType=VARCHAR},
      </if>
      <if test="record.kindname != null" >
        kindname = #{record.kindname,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update kind
    set kindid = #{record.kindid,jdbcType=VARCHAR},
      kindname = #{record.kindname,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xin.model.Kind" >
    update kind
    <set >
      <if test="kindname != null" >
        kindname = #{kindname,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where kindid = #{kindid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xin.model.Kind" >
    update kind
    set kindname = #{kindname,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where kindid = #{kindid,jdbcType=VARCHAR}
  </update>
</mapper>