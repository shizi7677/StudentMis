<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xin.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="com.xin.model.Product">
        <id column="productid" property="productid" jdbcType="VARCHAR"/>
        <result column="kindid" property="kindid" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="picture" property="picture" jdbcType="VARCHAR"/>

        <association property="kind" column="kindid" select="queryKind"></association>

        <collection property="items" javaType="ArrayList"
                    ofType="com.xin.model.Item"
                    column="productid" select="queryItem">
        </collection>

    </resultMap>

    <select id="queryKind" resultMap="com.xin.dao.KindMapper.BaseResultMap">
    select *
    from kind
    where kindid = #{kindid,jdbcType=VARCHAR}
</select>
    <select id="queryItem" resultMap="com.xin.dao.ItemMapper.BaseResultMap">
    select *
    from item
    where productid = #{productid,jdbcType=VARCHAR}
  </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    productid, kindid, name, description
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xin.model.ProductExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from product
        where productid = #{productid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from product
    where productid = #{productid,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.xin.model.ProductExample">
        delete from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xin.model.Product">
    insert into product (productid, kindid, name, 
      description)
    values (#{productid,jdbcType=VARCHAR}, #{kindid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.xin.model.Product">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productid != null">
                productid,
            </if>
            <if test="kindid != null">
                kindid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productid != null">
                #{productid,jdbcType=VARCHAR},
            </if>
            <if test="kindid != null">
                #{kindid,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xin.model.ProductExample" resultType="java.lang.Integer">
        select count(*) from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product
        <set>
            <if test="record.productid != null">
                productid = #{record.productid,jdbcType=VARCHAR},
            </if>
            <if test="record.kindid != null">
                kindid = #{record.kindid,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product
        set productid = #{record.productid,jdbcType=VARCHAR},
        kindid = #{record.kindid,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xin.model.Product">
        update product
        <set>
            <if test="kindid != null">
                kindid = #{kindid,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where productid = #{productid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xin.model.Product">
    update product
    set kindid = #{kindid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where productid = #{productid,jdbcType=VARCHAR}
  </update>
</mapper>