<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xin.dao.ItemMapper">
    <resultMap id="BaseResultMap" type="com.xin.model.Item">
        <id column="itemid" property="itemid" jdbcType="VARCHAR"/>
        <result column="productid" property="productid" jdbcType="VARCHAR"/>
        <result column="unitcost" property="unitcost" jdbcType="DECIMAL"/>
        <result column="supplier" property="supplier" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>

        <association property="product" column="productid" select="queryProduct"></association>

    </resultMap>
    <select id="queryProduct" resultMap="com.xin.dao.ProductMapper.BaseResultMap">
    select *
    from product
    where productid=#{productid,jdbcType=VARCHAR}
  </select>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    itemid, productid, unitcost, supplier, status, description
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xin.model.ItemExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from item
        where itemid = #{itemid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from item
    where itemid = #{itemid,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.xin.model.ItemExample">
        delete from item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xin.model.Item">
    insert into item (itemid, productid, unitcost, 
      supplier, status, description
      )
    values (#{itemid,jdbcType=VARCHAR}, #{productid,jdbcType=VARCHAR}, #{unitcost,jdbcType=DECIMAL}, 
      #{supplier,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.xin.model.Item">
        insert into item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="itemid != null">
                itemid,
            </if>
            <if test="productid != null">
                productid,
            </if>
            <if test="unitcost != null">
                unitcost,
            </if>
            <if test="supplier != null">
                supplier,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="itemid != null">
                #{itemid,jdbcType=VARCHAR},
            </if>
            <if test="productid != null">
                #{productid,jdbcType=VARCHAR},
            </if>
            <if test="unitcost != null">
                #{unitcost,jdbcType=DECIMAL},
            </if>
            <if test="supplier != null">
                #{supplier,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xin.model.ItemExample" resultType="java.lang.Integer">
        select count(*) from item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update item
        <set>
            <if test="record.itemid != null">
                itemid = #{record.itemid,jdbcType=VARCHAR},
            </if>
            <if test="record.productid != null">
                productid = #{record.productid,jdbcType=VARCHAR},
            </if>
            <if test="record.unitcost != null">
                unitcost = #{record.unitcost,jdbcType=DECIMAL},
            </if>
            <if test="record.supplier != null">
                supplier = #{record.supplier,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update item
        set itemid = #{record.itemid,jdbcType=VARCHAR},
        productid = #{record.productid,jdbcType=VARCHAR},
        unitcost = #{record.unitcost,jdbcType=DECIMAL},
        supplier = #{record.supplier,jdbcType=INTEGER},
        status = #{record.status,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xin.model.Item">
        update item
        <set>
            <if test="productid != null">
                productid = #{productid,jdbcType=VARCHAR},
            </if>
            <if test="unitcost != null">
                unitcost = #{unitcost,jdbcType=DECIMAL},
            </if>
            <if test="supplier != null">
                supplier = #{supplier,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where itemid = #{itemid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xin.model.Item">
    update item
    set productid = #{productid,jdbcType=VARCHAR},
      unitcost = #{unitcost,jdbcType=DECIMAL},
      supplier = #{supplier,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where itemid = #{itemid,jdbcType=VARCHAR}
  </update>
</mapper>